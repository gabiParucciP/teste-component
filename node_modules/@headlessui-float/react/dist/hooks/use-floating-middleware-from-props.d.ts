import type { Dispatch, MutableRefObject, SetStateAction } from 'react';
import type { AutoPlacementOptions, FlipOptions, HideOptions, OffsetOptions, ShiftOptions } from '@floating-ui/core';
import type { DetectOverflowOptions, Middleware, VirtualElement } from '@floating-ui/dom';
import { type ExtendedRefs } from '@floating-ui/react';
export declare function useFloatingMiddlewareFromProps(setMiddleware: Dispatch<SetStateAction<Middleware[] | undefined>>, refs: ExtendedRefs<HTMLElement>, arrowRef: MutableRefObject<HTMLElement | null>, props: {
    offset?: OffsetOptions;
    shift?: boolean | number | Partial<ShiftOptions & DetectOverflowOptions>;
    flip?: boolean | number | Partial<FlipOptions & DetectOverflowOptions>;
    arrow?: boolean | number;
    autoPlacement?: boolean | Partial<AutoPlacementOptions & DetectOverflowOptions>;
    hide?: boolean | Partial<HideOptions & DetectOverflowOptions> | Partial<HideOptions & DetectOverflowOptions>[];
    middleware?: Middleware[] | ((refs: {
        referenceEl: MutableRefObject<Element | VirtualElement | null>;
        floatingEl: MutableRefObject<HTMLElement | null>;
    }) => Middleware[]);
}): void;
