"use strict";
/*
 * Copyright 2023 Palantir Technologies, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.DatePicker3Dropdown = void 0;
var tslib_1 = require("tslib");
var React = tslib_1.__importStar(require("react"));
var core_1 = require("@blueprintjs/core");
var useMonthSelectRightOffset_1 = require("../../common/useMonthSelectRightOffset");
/**
 * Custom react-day-picker dropdown component which implements Blueprint's datepicker design
 * for month and year dropdowns.
 *
 * @see https://react-day-picker.js.org/guides/custom-components
 */
function DatePicker3Dropdown(_a) {
    var caption = _a.caption, children = _a.children, props = tslib_1.__rest(_a, ["caption", "children"]);
    var containerElement = React.useRef(null);
    var selectElement = React.useRef(null);
    // Use a custom hook to adjust the position of the position of the HTMLSelect icon to appear right next to
    // the month name. N.B. we expect props.caption to be a simple string representing the month name.
    var displayedMonthText = typeof caption === "string" ? caption : "";
    var monthSelectRightOffset = (0, useMonthSelectRightOffset_1.useMonthSelectRightOffset)(selectElement, containerElement, displayedMonthText);
    var iconProps = React.useMemo(function () { return (props.name === "months" ? { style: { right: monthSelectRightOffset } } : {}); }, [props.name, monthSelectRightOffset]);
    return (React.createElement("div", { ref: containerElement },
        React.createElement(core_1.HTMLSelect, tslib_1.__assign({ iconProps: iconProps, minimal: true, ref: selectElement }, props), children)));
}
exports.DatePicker3Dropdown = DatePicker3Dropdown;
//# sourceMappingURL=datePicker3Dropdown.js.map